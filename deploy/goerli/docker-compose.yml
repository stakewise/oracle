version: "3.9"

volumes:
  prometheus:
    driver: local
  alertmanager:
    driver: local
  postgres:
    driver: local
  ipfs:
    driver: local
  geth:
    driver: local
  besu:
    driver: local
  prysm:
    driver: local
  lighthouse:
    driver: local

networks:
  goerli:
    name: goerli
    driver: bridge

services:
  oracle:
    container_name: oracle_goerli
    image: europe-west4-docker.pkg.dev/stakewiselabs/public/oracle:v2.8.8
    restart: always
    entrypoint: ["python"]
    command: ["oracle/oracle/main.py"]
    env_file: [".env"]
    networks:
      - goerli

  keeper:
    container_name: keeper_goerli
    image: europe-west4-docker.pkg.dev/stakewiselabs/public/oracle:v2.8.8
    restart: always
    entrypoint: ["python"]
    command: ["oracle/keeper/main.py"]
    env_file: [".env"]
    profiles: ["keeper"]
    networks:
      - goerli

  prometheus:
    container_name: prometheus_goerli
    image: bitnami/prometheus:2
    restart: always
    env_file: [".env"]
    volumes:
      - prometheus:/opt/bitnami/prometheus/data
      - ../configs/prometheus.yml:/opt/bitnami/prometheus/conf/prometheus.yml
      - ../configs/rules.yml:/opt/bitnami/prometheus/conf/rules.yml
    networks:
      - goerli

  alertmanager:
    container_name: alertmanager_goerli
    image: bitnami/alertmanager:0
    restart: always
    env_file: [".env"]
    volumes:
      - alertmanager:/opt/bitnami/alertmanager/data
      - ../configs/alertmanager.yml:/opt/bitnami/alertmanager/conf/config.yml
    depends_on: ["prometheus"]
    networks:
      - goerli

  graph-node:
    container_name: graph_node_goerli
    image: graphprotocol/graph-node:v0.25.0
    restart: always
    env_file: [".env"]
    depends_on: ["postgres","ipfs"]
    profiles: ["graph"]
    networks:
      - goerli

  postgres:
    container_name: postgres_goerli
    image: postgres:14-alpine
    restart: always
    command: ["postgres", "-cshared_preload_libraries=pg_stat_statements"]
    env_file: [".env"]
    volumes: ["postgres:/var/lib/postgresql/data"]
    profiles: ["graph"]
    networks:
      - goerli

  subgraphs:
    container_name: subgraphs_goerli
    image: europe-west4-docker.pkg.dev/stakewiselabs/public/subgraphs:v1.3.0
    command: >
      /bin/sh -c "until nc -vz graph-node 8020; do echo 'Waiting graph-node'; sleep 2; done
      && yarn build:goerli
      && yarn create:local
      && yarn deploy:local"
    env_file: [".env"]
    restart: "no"
    depends_on: ["graph-node","ipfs"]
    profiles: ["graph"]
    networks:
      - goerli

  ipfs:
    container_name: ipfs_goerli
    image: ipfs/go-ipfs:v0.10.0
    restart: always
    env_file: [".env"]
    ulimits:
      nofile:
        soft: 8192
        hard: 8192
    volumes: ["ipfs:/data/ipfs","../configs/ipfs-entrypoint.sh:/usr/local/bin/start_ipfs"]
    profiles: ["ipfs"]
    networks:
      - goerli

  geth:
    container_name: geth_goerli
    image: ethereum/client-go:v1.10.26
    restart: always
    command:
      - --goerli
      - --syncmode=full
      - --authrpc.jwtsecret=/jwtsecret
      - --authrpc.addr=0.0.0.0
      - --authrpc.port=8551
      - --authrpc.vhosts=*
      - --http
      - --http.addr=0.0.0.0
      - --http.port=8545
      - --http.vhosts=*
      - --http.api=web3,eth,net
      - --datadir=/data/ethereum
      - --ethash.dagdir=/data/ethereum/.ethash
      - --ipcdisable
    volumes: ["geth:/data","../configs/jwtsecret:/jwtsecret"]
    profiles: ["geth"]
    networks:
      goerli:
        aliases:
          - eth1-node

  besu:
    container_name: besu_goerli
    image: hyperledger/besu:22.10.0
    restart: always
    command: >
      --network=goerli
      --data-path=/data
      --data-storage-format=BONSAI
      --sync-mode=X_SNAP
      --rpc-http-enabled
      --rpc-http-cors-origins=*
      --rpc-http-host=0.0.0.0
      --rpc-http-max-active-connections=256
      --rpc-http-port=8545
      --engine-rpc-enabled
      --engine-host-allowlist=*
      --engine-jwt-secret=/jwtsecret
      --engine-rpc-port=8551
      --host-allowlist=*
      --max-peers=50
    volumes: ["besu:/data","../configs/jwtsecret:/jwtsecret"]
    user: "0:0"
    profiles: ["besu"]
    networks:
      goerli:
        aliases:
          - eth1-node

  prysm:
    container_name: prysm_goerli
    image: gcr.io/prysmaticlabs/prysm/beacon-chain:v3.1.2
    restart: always
    command:
      - --goerli
      - --genesis-state=/data/genesis.ssz
      - --datadir=/data
      - --jwt-secret=/jwtsecret
      - --rpc-host=0.0.0.0
      - --rpc-port=5052
      - --monitoring-host=0.0.0.0
      - --http-web3provider=$ETH1_ENDPOINT
      - --slots-per-archive-point=1024
      - --accept-terms-of-use
    volumes: ["prysm:/data","../configs/genesis.ssz:/data/gensis.ssz","../configs/jwtsecret:/jwtsecret"]
    profiles: ["prysm"]
    networks:
      goerli:
        aliases:
          - eth2-node

  lighthouse:
    container_name: lighthouse_goerli
    image: sigp/lighthouse:v3.3.0
    restart: always
    command:
      - lighthouse
      - --network
      - goerli
      - beacon
      - --http
      - --http-address=0.0.0.0
      - --http-port=5052
      - --execution-endpoint
      - $ETH1_ENDPOINT
      - --execution-jwt=/jwtsecret
    volumes: ["lighthouse:/root/.lighthouse","../configs/jwtsecret:/jwtsecret"]
    profiles: ["lighthouse"]
    networks:
      goerli:
        aliases:
          - eth2-node
